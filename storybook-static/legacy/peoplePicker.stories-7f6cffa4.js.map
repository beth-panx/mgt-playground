{"version":3,"file":"peoplePicker.stories-7f6cffa4.js","sources":["../../dist/es6/components/mgt-people-picker/mgt-people-picker-css.js","../../dist/es6/components/mgt-people-picker/mgt-people-picker.js","../../stories/mock-provider/peoplePicker.stories.js"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\nimport { css } from 'lit-element';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles = [\n    css `\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/*\r\n  Your use of the content in the files referenced here is subject to the terms of the license at http://aka.ms/fabric-assets-license\r\n*/\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n:host([hidden]) {\n  display: none; }\n\n:host {\n  display: block;\n  --default-font-family: \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\",\n    -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;\n  --theme-primary-color: #0078d7;\n  --theme-dark-color: #005a9e; }\n\n.ms-Icon {\n  display: inline-block;\n  font-family: \"FabricMDL2Icons\";\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin: 4px 0; }\n\n.ms-Icon--ChevronDown::before {\n  content: \"\\\\\\E70D\"; }\n\n.ms-Icon--ChevronUp::before {\n  content: \"\\\\\\E70E\"; }\n\n.ms-Icon--Contact::before {\n  content: \"\\\\\\E77B\"; }\n\n.ms-Icon--AddFriend::before {\n  content: \"\\\\\\E8FA\"; }\n\n.ms-Icon--OutlookLogoInverse::before {\n  content: \"\\\\\\EB6D\"; }\n\n:host {\n  border-radius: 2px; }\n\n:host .root,\nmgt-people-picker .root {\n  display: block; }\n\n:host .people-picker,\nmgt-people-picker .people-picker {\n  position: relative;\n  margin: 7px 0 0 0;\n  background-color: white;\n  padding-bottom: 8px; }\n\n:host .people-list,\nmgt-people-picker .people-list {\n  position: absolute;\n  margin: 7px 0px 0px 0px;\n  padding: 0;\n  box-shadow: 0px 1.3289px 2.65781px rgba(180, 180, 180, 0.182), 0px 1.3289px 2.65781px rgba(68, 68, 68, 0.3);\n  border-radius: 2px;\n  background-color: var(--people-list-background-color, white);\n  z-index: 1;\n  /* Sit on top */\n  width: 100%;\n  text-align: left;\n  list-style-type: none;\n  font-family: Segoe UI;\n  font-style: normal;\n  font-weight: normal; }\n  :host .people-list li,\n  mgt-people-picker .people-list li {\n    cursor: pointer; }\n\n:host .people-list-separator,\nmgt-people-picker .people-list-separator {\n  margin: var(--separator-margin, 0px 0px 0px 0px);\n  height: 2px;\n  background: var(--accent-color, #0078d4);\n  margin-top: 5px;\n  text-align: center; }\n\n:host .people-chosen-input,\nmgt-people-picker .people-chosen-input {\n  position: relative;\n  border: none;\n  line-height: normal;\n  outline: none;\n  font-family: Segoe UI;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 19px; }\n\n:host .people-chosen-list,\nmgt-people-picker .people-chosen-list {\n  display: flex;\n  flex-wrap: wrap;\n  vertical-align: middle;\n  margin: 0 0 0 0;\n  list-style-type: none;\n  padding-left: 10px;\n  font-family: Segoe UI;\n  font-style: normal;\n  font-weight: normal; }\n\n.CloseIcon,\nmgt-people-picker .CloseIcon {\n  line-height: normal;\n  font-family: 'FabricMDL2Icons';\n  padding-right: 8px;\n  padding-left: 4px;\n  margin-top: 0px;\n  cursor: pointer; }\n\n:host .SearchIcon,\nmgt-people-picker .SearchIcon {\n  font-family: 'FabricMDL2Icons';\n  color: var(--accent-color, #0078d4); }\n\n:host .people-person,\nmgt-people-picker .people-person {\n  display: flex;\n  margin: 4px 5px 0px 0;\n  align-items: center;\n  background-color: rgba(196, 196, 196, 0.24);\n  border-radius: 15px;\n  height: 24px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis; }\n\n:host .list-person,\nmgt-people-picker .list-person {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 12px;\n  font-family: Segoe UI;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px; }\n  :host .list-person:hover,\n  mgt-people-picker .list-person:hover {\n    background-color: #f1f1f1dd; }\n\n:host .people-person-list-fill,\nmgt-people-picker .people-person-list-fill {\n  background-color: #f1f1f1; }\n\n:host .people-person-text,\nmgt-people-picker .people-person-text {\n  font-size: 14px;\n  font-weight: normal;\n  margin: 0;\n  padding: 0; }\n\n:host .input-search,\nmgt-people-picker .input-search {\n  margin: 7px 2px 0px 3px; }\n\n:host .input-search-start,\nmgt-people-picker .input-search-start {\n  margin: 7px 0px 0px 0px;\n  line-height: normal;\n  margin-inline-start: 0px;\n  margin-inline-end: 0px; }\n\n:host .people-picker-input,\nmgt-people-picker .people-picker-input {\n  display: flex;\n  order: 2;\n  background-color: white;\n  margin: var(--avatar-margin, 0 4px 0 0);\n  font-size: 14px;\n  line-height: 19px;\n  cursor: text; }\n\n:host .duplicate-person,\nmgt-people-picker .duplicate-person {\n  text-decoration: none;\n  border-bottom: 1px solid red; }\n\n:host .remove-person-button,\nmgt-people-picker .remove-person-button {\n  background: #767676;\n  transform: matrix(-0.71, -0.71, 0.71, -0.71, 0, 0); }\n\n:host .remove-person-button-secondary,\nmgt-people-picker .remove-person-button-secondary {\n  background: #767676;\n  transform: matrix(0.71, -0.71, 0.71, 0.71, 0, 0); }\n\n:host .person-display-name,\nmgt-people-picker .person-display-name {\n  max-width: 100px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-left: 8px;\n  font-family: Segoe UI;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 19px;\n  text-align: center;\n  color: #000000; }\n\nmgt-person {\n  --avatar-size-s: 32px;\n  margin-left: 12px; }\n\n.chosen-person {\n  --avatar-size-s: 24px;\n  margin-left: 0px; }\n\n:host .search-error-text,\n:host .loading-text,\nmgt-people-picker .search-error-text,\nmgt-people-picker .loading-text {\n  font-family: Segoe UI;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 19px;\n  text-align: center;\n  color: #232222; }\n\n:host .SearchErrorIcon,\nmgt-people-picker .SearchErrorIcon {\n  display: inline-block;\n  font-family: 'FabricMDL2Icons';\n  color: #cf0000; }\n\n:host .message-parent,\nmgt-people-picker .message-parent {\n  margin-top: 30px;\n  margin-bottom: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  vertical-align: middle; }\n\n:host .highlight-search-text,\nmgt-people-picker .highlight-search-text {\n  font-weight: bold; }\n\n:host .people-person-job-title,\nmgt-people-picker .people-person-job-title {\n  flex: 100%;\n  order: 3;\n  font-weight: normal;\n  font-size: 12px;\n  text-transform: uppercase; }\n\n:host .people-person-text-area,\nmgt-people-picker .people-person-text-area {\n  margin-left: 13px;\n  flex: 1 1 0;\n  max-height: 40px; }\n\n`\n];\n//# sourceMappingURL=mgt-people-picker-css.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { customElement, html, property } from 'lit-element';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { Providers } from '../../Providers';\nimport { ProviderState } from '../../providers/IProvider';\nimport '../../styles/fabric-icon-font';\nimport { debounce } from '../../utils/Utils';\nimport '../mgt-person/mgt-person';\nimport { MgtTemplatedComponent } from '../templatedComponent';\nimport { styles } from './mgt-people-picker-css';\n/**\n * Web component used to search for people from the Microsoft Graph\n *\n * @export\n * @class MgtPicker\n * @extends {MgtTemplatedComponent}\n */\nlet MgtPeoplePicker = class MgtPeoplePicker extends MgtTemplatedComponent {\n    constructor() {\n        super();\n        /**\n         * containing object of MgtPersonDetails.\n         * @type {MgtPersonDetails}\n         */\n        this.people = null;\n        /**\n         * determining how many people to show in list.\n         * @type {number}\n         */\n        this.showMax = 6;\n        /**\n         *  array of user picked people.\n         * @type {Array<any>}\n         */\n        this.selectedPeople = [];\n        // User input in search\n        this._userInput = '';\n        // tracking of user arrow key input for selection\n        this.arrowSelectionCount = 0;\n        // if search is still loading don't load \"people not found\" state\n        this.isLoading = false;\n    }\n    /**\n     * Array of styles to apply to the element. The styles should be defined\n     * user the `css` tag function.\n     */\n    static get styles() {\n        return styles;\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     *\n     * @param {*} name\n     * @param {*} oldValue\n     * @param {*} newValue\n     * @memberof MgtPersonCard\n     */\n    attributeChangedCallback(att, oldval, newval) {\n        super.attributeChangedCallback(att, oldval, newval);\n        if (att === 'group-id' && oldval !== newval) {\n            this.findGroup();\n        }\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time work on the element after update.\n     * Checks if group-id is present\n     * @memberof MgtPeoplePicker\n     */\n    firstUpdated() {\n        if (this.groupId) {\n            Providers.onProviderUpdated(() => this.findGroup());\n            this.findGroup();\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return a lit-html TemplateResult.\n     * Setting properties inside this method will not trigger the element to update.\n     * @returns\n     * @memberof MgtPeoplePicker\n     */\n    render() {\n        return (this.renderTemplate('default', { people: this.people }) ||\n            html `\n        <div class=\"people-picker\" @blur=${this.lostFocus}>\n          <div class=\"people-picker-input\" @click=${this.gainedFocus}>\n            ${this.renderChosenPeople()}\n          </div>\n          <div class=\"people-list-separator\"></div>\n          ${this.renderPeopleList()}\n        </div>\n      `);\n    }\n    /**\n     * Focuses the input element when focus is called\n     *\n     * @param {FocusOptions} [options]\n     * @memberof MgtPeoplePicker\n     */\n    focus(options) {\n        const peopleInput = this.renderRoot.querySelector('.people-chosen-input');\n        if (peopleInput) {\n            peopleInput.focus(options);\n        }\n    }\n    /**\n     * Queries the microsoft graph for a user based on the user id and adds them to the selectedPeople array\n     *\n     * @param {[string]} an array of user ids to add to selectedPeople\n     * @returns {Promise<void>}\n     * @memberof MgtPeoplePicker\n     */\n    selectUsersById(userIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = Providers.globalProvider;\n            const client = Providers.globalProvider.graph;\n            if (provider && provider.state === ProviderState.SignedIn) {\n                // tslint:disable-next-line: forin\n                for (const id in userIds) {\n                    try {\n                        const personDetails = yield client.getUser(userIds[id]);\n                        this.addPerson(personDetails);\n                        // tslint:disable-next-line: no-empty\n                    }\n                    catch (e) { }\n                }\n            }\n        });\n    }\n    /**\n     * Adds debounce method for set delay on user input\n     */\n    onUserKeyUp(event) {\n        if (event.keyCode === 40 || event.keyCode === 38) {\n            // keyCodes capture: down arrow (40) and up arrow (38)\n            return;\n        }\n        const input = event.target;\n        if (event.code === 'Escape') {\n            input.value = '';\n            this._userInput = '';\n            this.people = [];\n            return;\n        }\n        if (event.code === 'Backspace' && this._userInput.length === 0 && this.selectedPeople.length > 0) {\n            input.value = '';\n            this._userInput = '';\n            // remove last person in selected list\n            this.selectedPeople = this.selectedPeople.splice(0, this.selectedPeople.length - 1);\n            // fire selected people changed event\n            this.fireCustomEvent('selectionChanged', this.selectedPeople);\n            return;\n        }\n        this.handleUserSearch(input);\n    }\n    /**\n     * Async query to Graph for members of group if determined by developer.\n     * set's `this.groupPeople` to those members.\n     */\n    findGroup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = Providers.globalProvider;\n            if (provider && provider.state === ProviderState.SignedIn) {\n                const client = Providers.globalProvider.graph;\n                this.groupPeople = yield client.getPeopleFromGroup(this.groupId);\n            }\n        });\n    }\n    /**\n     * Tracks event on user input in search\n     * @param input - input text\n     */\n    handleUserSearch(input) {\n        if (!this.debouncedSearch) {\n            this.debouncedSearch = debounce(() => {\n                if (this._userInput !== input.value) {\n                    this._userInput = input.value;\n                    this.loadPersonSearch(this._userInput);\n                    this.arrowSelectionCount = 0;\n                }\n            }, 200);\n        }\n        this.debouncedSearch();\n    }\n    /**\n     * Tracks event on user search (keydown)\n     * @param event - event tracked on user input (keydown)\n     */\n    onUserKeyDown(event) {\n        if (event.keyCode === 40 || event.keyCode === 38) {\n            // keyCodes capture: down arrow (40) and up arrow (38)\n            this.handleArrowSelection(event);\n            if (this._userInput.length > 0) {\n                event.preventDefault();\n            }\n        }\n        if (event.code === 'Tab' || event.code === 'Enter') {\n            if (this.people.length) {\n                event.preventDefault();\n            }\n            this.addPerson(this.people[this.arrowSelectionCount]);\n            event.target.value = '';\n        }\n    }\n    /**\n     * Tracks user key selection for arrow key selection of people\n     * @param event - tracks user key selection\n     */\n    handleArrowSelection(event) {\n        if (this.people.length) {\n            // update arrow count\n            if (event.keyCode === 38) {\n                // up arrow\n                if (this.arrowSelectionCount > 0) {\n                    this.arrowSelectionCount--;\n                }\n                else {\n                    this.arrowSelectionCount = 0;\n                }\n            }\n            if (event.keyCode === 40) {\n                // down arrow\n                if (this.arrowSelectionCount + 1 !== this.people.length && this.arrowSelectionCount + 1 < this.showMax) {\n                    this.arrowSelectionCount++;\n                }\n                else {\n                    this.arrowSelectionCount = 0;\n                }\n            }\n            const peopleList = this.renderRoot.querySelector('.people-list');\n            // reset background color\n            // tslint:disable-next-line: prefer-for-of\n            for (let i = 0; i < peopleList.children.length; i++) {\n                peopleList.children[i].setAttribute('class', 'list-person people-person-list');\n            }\n            // set selected background\n            peopleList.children[this.arrowSelectionCount].setAttribute('class', 'list-person people-person-list-fill');\n        }\n    }\n    /**\n     * Tracks when user selects person from picker\n     * @param person - contains details pertaining to selected user\n     * @param event - tracks user event\n     */\n    addPerson(person) {\n        if (person) {\n            this._userInput = '';\n            const duplicatePeople = this.selectedPeople.filter(p => {\n                return p.id === person.id;\n            });\n            if (duplicatePeople.length === 0) {\n                this.selectedPeople.push(person);\n                this.fireCustomEvent('selectionChanged', this.selectedPeople);\n                this.people = [];\n            }\n        }\n        this.gainedFocus();\n    }\n    /**\n     * Async method which query's the Graph with user input\n     * @param name - user input or name of person searched\n     */\n    loadPersonSearch(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (name.length) {\n                name = name.toLowerCase();\n                const provider = Providers.globalProvider;\n                let people;\n                if (provider && provider.state === ProviderState.SignedIn) {\n                    const that = this;\n                    let loading = true;\n                    setTimeout(() => {\n                        if (loading) {\n                            that.isLoading = true;\n                        }\n                    }, 400);\n                    const client = Providers.globalProvider.graph;\n                    // filtering groups\n                    if (this.groupId) {\n                        people = this.groupPeople;\n                    }\n                    else {\n                        people = yield client.findPerson(name);\n                    }\n                    if (people) {\n                        people = people.filter(person => {\n                            return person.displayName.toLowerCase().indexOf(name) !== -1;\n                        });\n                    }\n                    this.people = this.filterPeople(people);\n                    loading = false;\n                    this.isLoading = false;\n                }\n            }\n            else {\n                this.people = [];\n            }\n        });\n    }\n    /**\n     * Filters people searched from already selected people\n     * @param people - array of people returned from query to Graph\n     */\n    filterPeople(people) {\n        // check if people need to be updated\n        // ensuring people list is displayed\n        // find ids from selected people\n        if (people) {\n            const idFilter = this.selectedPeople.map(el => {\n                return el.id;\n            });\n            // filter id's\n            const filtered = people.filter(person => {\n                return idFilter.indexOf(person.id) === -1;\n            });\n            return filtered;\n        }\n    }\n    /**\n     * Removes person from selected people\n     * @param person - person and details pertaining to user selected\n     */\n    removePerson(person) {\n        const chosenPerson = person;\n        const filteredPersonArr = this.selectedPeople.filter(p => {\n            return p.id !== chosenPerson.id;\n        });\n        this.selectedPeople = filteredPersonArr;\n        this.fireCustomEvent('selectionChanged', this.selectedPeople);\n    }\n    renderErrorMessage() {\n        return html `\n      <div class=\"message-parent\">\n        <div label=\"search-error-text\" aria-label=\"We didn't find any matches.\" class=\"search-error-text\">\n          We didn't find any matches.\n        </div>\n      </div>\n    `;\n    }\n    renderLoadingMessage() {\n        return html `\n      <div class=\"message-parent\">\n        <div label=\"search-error-text\" aria-label=\"loading\" class=\"loading-text\">\n          ......\n        </div>\n      </div>\n    `;\n    }\n    renderChosenPeople() {\n        let peopleList;\n        let inputClass = 'input-search-start';\n        if (this.selectedPeople.length > 0) {\n            inputClass = 'input-search';\n            peopleList = html `\n        ${this.selectedPeople.slice(0, this.selectedPeople.length).map(person => html `\n              <li class=\"people-person\">\n                ${this.renderTemplate('person', { person }, person.displayName) || this.renderChosenPerson(person)}\n                <div class=\"CloseIcon\" @click=\"${() => this.removePerson(person)}\">\\uE711</div>\n              </li>\n            `)}\n      `;\n        }\n        else {\n            peopleList = null;\n        }\n        // tslint:disable\n        return html `\n      <div class=\"people-chosen-list\">\n        ${peopleList}\n        <div class=\"${inputClass}\">\n          <input\n            id=\"people-picker-input\"\n            class=\"people-chosen-input\"\n            type=\"text\"\n            placeholder=\"Start typing a name\"\n            label=\"people-picker-input\"\n            aria-label=\"people-picker-input\"\n            role=\"input\"\n            .value=\"${this._userInput}\"\n            @keydown=\"${this.onUserKeyDown}\"\n            @keyup=\"${this.onUserKeyUp}\"\n          />\n        </div>\n      </div>\n    `;\n    }\n    // tslint:enable\n    gainedFocus() {\n        const peopleList = this.renderRoot.querySelector('.people-list');\n        const peopleInput = this.renderRoot.querySelector('.people-chosen-input');\n        peopleInput.focus();\n        peopleInput.select();\n        if (peopleList) {\n            // Mouse is focused on input\n            peopleList.setAttribute('style', 'display:block');\n        }\n    }\n    lostFocus() {\n        const peopleList = this.renderRoot.querySelector('.people-list');\n        if (peopleList) {\n            peopleList.setAttribute('style', 'display:none');\n        }\n    }\n    renderHighlightText(person) {\n        const peoples = person;\n        const highlightLocation = peoples.displayName.toLowerCase().indexOf(this._userInput.toLowerCase());\n        if (highlightLocation !== -1) {\n            // no location\n            if (highlightLocation === 0) {\n                // highlight is at the beginning of sentence\n                peoples.first = '';\n                peoples.highlight = peoples.displayName.slice(0, this._userInput.length);\n                peoples.last = peoples.displayName.slice(this._userInput.length, peoples.displayName.length);\n            }\n            else if (highlightLocation === peoples.displayName.length) {\n                // highlight is at end of the sentence\n                peoples.first = peoples.displayName.slice(0, highlightLocation);\n                peoples.highlight = peoples.displayName.slice(highlightLocation, peoples.displayName.length);\n                peoples.last = '';\n            }\n            else {\n                // highlight is in middle of sentence\n                peoples.first = peoples.displayName.slice(0, highlightLocation);\n                peoples.highlight = peoples.displayName.slice(highlightLocation, highlightLocation + this._userInput.length);\n                peoples.last = peoples.displayName.slice(highlightLocation + this._userInput.length, peoples.displayName.length);\n            }\n        }\n        return html `\n      <div>\n        <span class=\"people-person-text\">${peoples.first}</span\n        ><span class=\"people-person-text highlight-search-text\">${peoples.highlight}</span\n        ><span class=\"people-person-text\">${peoples.last}</span>\n      </div>\n    `;\n    }\n    renderPeopleList() {\n        let people = this.people;\n        let content;\n        if (people) {\n            people = people.slice(0, this.showMax);\n            if (this.isLoading) {\n                content = this.renderTemplate('loading', null, 'loading') || this.renderLoadingMessage();\n            }\n            else if (people.length === 0 && this._userInput.length > 0) {\n                content = this.renderTemplate('error', null, 'error') || this.renderErrorMessage();\n            }\n            else {\n                if (people[0]) {\n                    people[0].isSelected = 'fill';\n                }\n                content = this.renderPeople(people);\n            }\n        }\n        return html `\n      <div class=\"people-list\">\n        ${content}\n      </div>\n    `;\n    }\n    renderPeople(people) {\n        return html `\n      ${repeat(people, person => person.id, person => html `\n          <li\n            class=\"list-person ${person.isSelected === 'fill' ? 'people-person-list-fill' : 'people-person-list'}\"\n            @click=\"${() => this.addPerson(person)}\"\n          >\n            ${this.renderTemplate('person', { person }, person.displayName) || this.renderPerson(person)}\n            <div class=\"people-person-text-area\" id=\"${person.displayName}\">\n              ${this.renderHighlightText(person)}\n              <span class=\"people-person-job-title\">${person.jobTitle}</span>\n            </div>\n          </li>\n        `)}\n    `;\n    }\n    renderPerson(person) {\n        return html `\n      <mgt-person .personDetails=${person} .personImage=${'@'}></mgt-person>\n    `;\n    }\n    renderChosenPerson(person) {\n        return html `\n      <mgt-person class=\"chosen-person\" .personDetails=${person} .personImage=${'@'} show-name></mgt-person>\n    `;\n    }\n};\n__decorate([\n    property({\n        attribute: 'people',\n        type: Object\n    })\n], MgtPeoplePicker.prototype, \"people\", void 0);\n__decorate([\n    property({\n        attribute: 'show-max',\n        type: Number\n    })\n], MgtPeoplePicker.prototype, \"showMax\", void 0);\n__decorate([\n    property({\n        attribute: 'group-id',\n        type: String\n    })\n], MgtPeoplePicker.prototype, \"groupId\", void 0);\n__decorate([\n    property({\n        attribute: 'selected-people',\n        type: Array\n    })\n], MgtPeoplePicker.prototype, \"selectedPeople\", void 0);\n__decorate([\n    property()\n], MgtPeoplePicker.prototype, \"_userInput\", void 0);\nMgtPeoplePicker = __decorate([\n    customElement('mgt-people-picker')\n], MgtPeoplePicker);\nexport { MgtPeoplePicker };\n//# sourceMappingURL=mgt-people-picker.js.map","import { html } from 'lit-element';\nimport { withKnobs, withWebComponentsKnobs } from '@open-wc/demoing-storybook';\nimport '../../dist/es6/components/mgt-people-picker/mgt-people-picker';\nimport '../../dist/es6/mock/mgt-mock-provider';\nimport '../../dist/es6/mock/MockProvider';\n\nexport default {\n  title: 'Mock Provider|mgt-people-picker',\n  component: 'mgt-people-picker',\n  decorators: [withKnobs, withWebComponentsKnobs]\n};\n\nexport const peoplePicker = () => html`\n  <mgt-mock-provider></mgt-mock-provider>\n  <mgt-people-picker></mgt-people-picker>\n`;\n"],"names":["styles","css","MgtPeoplePicker","people","showMax","selectedPeople","_userInput","arrowSelectionCount","isLoading","MgtTemplatedComponent","att","oldval","newval","findGroup","this","groupId","Providers","onProviderUpdated","_this2","renderTemplate","html","lostFocus","gainedFocus","renderChosenPeople","renderPeopleList","options","peopleInput","renderRoot","querySelector","focus","userIds","provider","globalProvider","client","graph","state","ProviderState","SignedIn","id","getUser","personDetails","addPerson","event","keyCode","input","target","code","value","length","splice","fireCustomEvent","handleUserSearch","getPeopleFromGroup","groupPeople","debouncedSearch","debounce","_this3","loadPersonSearch","handleArrowSelection","preventDefault","peopleList","i","children","setAttribute","person","filter","p","push","name","toLowerCase","that","loading","setTimeout","findPerson","displayName","indexOf","filterPeople","idFilter","map","el","chosenPerson","filteredPersonArr","inputClass","slice","_this4","renderChosenPerson","removePerson","onUserKeyDown","onUserKeyUp","select","peoples","highlightLocation","first","highlight","last","content","renderLoadingMessage","renderErrorMessage","isSelected","renderPeople","repeat","_this5","renderPerson","renderHighlightText","jobTitle","__decorate","property","attribute","type","Object","Number","String","Array","customElement","title","component","decorators","withKnobs","withWebComponentsKnobs"],"mappings":"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"}