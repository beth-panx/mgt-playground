{"version":3,"file":"people.stories-6e2998d4.js","sources":["../dist/es6/components/mgt-people/mgt-people-css.js","../dist/es6/components/mgt-people/mgt-people.js","../stories/mock-provider/people.stories.js"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\nimport { css } from 'lit-element';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles = [\n    css `\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/*\r\n  Your use of the content in the files referenced here is subject to the terms of the license at http://aka.ms/fabric-assets-license\r\n*/\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n:host([hidden]) {\n  display: none; }\n\n:host {\n  display: block;\n  --default-font-family: \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\",\n    -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;\n  --theme-primary-color: #0078d7;\n  --theme-dark-color: #005a9e; }\n\n.ms-Icon {\n  display: inline-block;\n  font-family: \"FabricMDL2Icons\";\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin: 4px 0; }\n\n.ms-Icon--ChevronDown::before {\n  content: \"\\\\\\E70D\"; }\n\n.ms-Icon--ChevronUp::before {\n  content: \"\\\\\\E70E\"; }\n\n.ms-Icon--Contact::before {\n  content: \"\\\\\\E77B\"; }\n\n.ms-Icon--AddFriend::before {\n  content: \"\\\\\\E8FA\"; }\n\n.ms-Icon--OutlookLogoInverse::before {\n  content: \"\\\\\\EB6D\"; }\n\n:host .people-list,\nmgt-people .people-list {\n  list-style-type: none;\n  margin: var(--list-margin, 8px 4px 8px 8px);\n  padding: 0;\n  font-family: var(--default-font-family, \"Segoe UI\");\n  font-style: normal;\n  font-weight: normal;\n  display: flex;\n  align-items: center; }\n\n:host .people-person,\nmgt-people .people-person {\n  margin: var(--avatar-margin, 0 4px 0 0);\n  display: flex; }\n\n:host .overflow span,\nmgt-people .overflow span {\n  vertical-align: middle; }\n\n`\n];\n//# sourceMappingURL=mgt-people-css.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { customElement, html, property } from 'lit-element';\nimport { Providers } from '../../Providers';\nimport { ProviderState } from '../../providers/IProvider';\nimport '../../styles/fabric-icon-font';\nimport '../mgt-person/mgt-person';\nimport { MgtTemplatedComponent } from '../templatedComponent';\nimport { PersonCardInteraction } from './../PersonCardInteraction';\nimport { styles } from './mgt-people-css';\n/**\n * web component to display a group of people or contacts by using their photos or initials.\n *\n * @export\n * @class MgtPeople\n * @extends {MgtTemplatedComponent}\n */\nlet MgtPeople = class MgtPeople extends MgtTemplatedComponent {\n    constructor() {\n        super(...arguments);\n        /**\n         * containing array of people used in the component.\n         * @type {Array<MgtPersonDetails>}\n         */\n        this.people = null;\n        /**\n         * developer determined max people shown in component\n         * @type {number}\n         */\n        this.showMax = 3;\n        /**\n         * Sets how the person-card is invoked\n         * Set to PersonCardInteraction.none to not show the card\n         *\n         * @type {PersonCardInteraction}\n         * @memberof MgtPerson\n         */\n        this.personCardInteraction = PersonCardInteraction.hover;\n        this._firstUpdated = false;\n    }\n    /**\n     * Array of styles to apply to the element. The styles should be defined\n     * using the `css` tag function.\n     */\n    static get styles() {\n        return styles;\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated() {\n        this._firstUpdated = true;\n        Providers.onProviderUpdated(() => this.loadPeople());\n        this.loadPeople();\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n        if (this.people) {\n            if (this.people.length) {\n                return (this.renderTemplate('default', { people: this.people }) ||\n                    html `\n            <ul class=\"people-list\">\n              ${this.people.slice(0, this.showMax).map(person => html `\n                    <li class=\"people-person\">\n                      ${this.renderTemplate('person', { person }, person.displayName) || this.renderPerson(person)}\n                    </li>\n                  `)}\n              ${this.people.length > this.showMax\n                        ? this.renderTemplate('overflow', {\n                            extra: this.people.length - this.showMax,\n                            max: this.showMax,\n                            people: this.people\n                        }) ||\n                            html `\n                    <li class=\"overflow\"><span>+${this.people.length - this.showMax}<span></li>\n                  `\n                        : null}\n            </ul>\n          `);\n            }\n            else {\n                return this.renderTemplate('no-people', null) || html ``;\n            }\n        }\n        else {\n            return this.renderTemplate('no-data', null) || html ``;\n        }\n    }\n    loadPeople() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._firstUpdated) {\n                return;\n            }\n            if (!this.people) {\n                const provider = Providers.globalProvider;\n                if (provider && provider.state === ProviderState.SignedIn) {\n                    const client = Providers.globalProvider.graph;\n                    if (this.groupId) {\n                        this.people = yield client.getPeopleFromGroup(this.groupId);\n                    }\n                    else if (this.userIds) {\n                        this.people = yield Promise.all(this.userIds.map((userId) => __awaiter(this, void 0, void 0, function* () {\n                            return yield client.getUser(userId);\n                        })));\n                    }\n                    else {\n                        this.people = yield client.getPeople();\n                    }\n                }\n            }\n        });\n    }\n    renderPerson(person) {\n        // set image to @ to flag the mgt-person component to\n        // query the image from the graph\n        return html `\n      <mgt-person\n        .personDetails=${person}\n        .personImage=${'@'}\n        .personCardInteraction=${this.personCardInteraction}\n      ></mgt-person>\n    `;\n    }\n};\n__decorate([\n    property({\n        attribute: 'people',\n        type: Object\n    })\n], MgtPeople.prototype, \"people\", void 0);\n__decorate([\n    property({\n        attribute: 'show-max',\n        type: Number\n    })\n], MgtPeople.prototype, \"showMax\", void 0);\n__decorate([\n    property({\n        attribute: 'group-id',\n        type: String\n    })\n], MgtPeople.prototype, \"groupId\", void 0);\n__decorate([\n    property({\n        attribute: 'user-ids',\n        converter: (value, type) => {\n            return value.split(',');\n        }\n    })\n], MgtPeople.prototype, \"userIds\", void 0);\n__decorate([\n    property({\n        attribute: 'person-card',\n        converter: (value, type) => {\n            value = value.toLowerCase();\n            if (typeof PersonCardInteraction[value] === 'undefined') {\n                return PersonCardInteraction.hover;\n            }\n            else {\n                return PersonCardInteraction[value];\n            }\n        }\n    })\n], MgtPeople.prototype, \"personCardInteraction\", void 0);\nMgtPeople = __decorate([\n    customElement('mgt-people')\n], MgtPeople);\nexport { MgtPeople };\n//# sourceMappingURL=mgt-people.js.map","import { html } from 'lit-element';\nimport { withKnobs, withWebComponentsKnobs } from '@open-wc/demoing-storybook';\nimport '../../dist/es6/components/mgt-people/mgt-people';\nimport '../../dist/es6/mock/mgt-mock-provider';\nimport '../../dist/es6/mock/MockProvider';\n\nexport default {\n  title: 'Mock Provider|mgt-people',\n  component: 'mgt-people',\n  decorators: [withKnobs, withWebComponentsKnobs]\n};\n\nexport const people = () => html`\n  <mgt-mock-provider></mgt-mock-provider>\n  <mgt-people show-max=\"5\"></mgt-people>\n`;\n"],"names":["styles","css","MgtPeople","MgtTemplatedComponent","[object Object]","people","showMax","personCardInteraction","PersonCardInteraction","hover","_firstUpdated","Providers","onProviderUpdated","this","loadPeople","length","renderTemplate","html","slice","map","person","displayName","renderPerson","extra","max","provider","globalProvider","state","ProviderState","SignedIn","client","graph","groupId","getPeopleFromGroup","userIds","Promise","all","userId","__awaiter","getUser","getPeople","__decorate","property","attribute","type","Object","Number","String","converter","value","split","toLowerCase","customElement","title","component","decorators","withKnobs","withWebComponentsKnobs"],"mappings":"+MASA,MAAaA,EAAS,CACpBC,sqDCeF,IAAaC,EAAb,cAA+BC,EAA/BC,uCAiBSC,OAAsF,UAUtFC,QAAkB,OA2ClBC,sBAA+CC,EAAsBC,WAEpEC,eAAgB,6BAlEfV,EA6ECI,oBACHM,eAAgB,EACrBC,EAAUC,kBAAkB,IAAMC,KAAKC,mBAClCA,aASGV,gBACJS,KAAKR,OACHQ,KAAKR,OAAOU,OAEZF,KAAKG,eAAe,UAAW,CAAEX,OAAQQ,KAAKR,UAC9CY,8BAEMJ,KAAKR,OAAOa,MAAM,EAAGL,KAAKP,SAASa,IACnCC,GACEH,gCAEMJ,KAAKG,eAAe,SAAU,CAAEI,OAAAA,GAAUA,EAAOC,cAAgBR,KAAKS,aAAaF,gBAI3FP,KAAKR,OAAOU,OAASF,KAAKP,QACxBO,KAAKG,eAAe,WAAY,CAC9BO,MAAOV,KAAKR,OAAOU,OAASF,KAAKP,QACjCkB,IAAKX,KAAKP,QACVD,OAAQQ,KAAKR,UAEfY,iCACgCJ,KAAKR,OAAOU,OAASF,KAAKP,oCAE1D,cAKHO,KAAKG,eAAe,YAAa,OAASC,IAG5CJ,KAAKG,eAAe,UAAW,OAASC,IAIrCb,wDACPS,KAAKH,gBAILG,KAAKR,OAAQ,OACVoB,EAAWd,EAAUe,kBAEvBD,GAAYA,EAASE,QAAUC,EAAcC,SAAU,OACnDC,EAASnB,EAAUe,eAAeK,MAEpClB,KAAKmB,aACF3B,aAAeyB,EAAOG,mBAAmBpB,KAAKmB,SAC1CnB,KAAKqB,aACT7B,aAAe8B,QAAQC,IAC1BvB,KAAKqB,QAAQf,IAAUkB,GAASC,EAAAzB,UAAA,OAAA,EAAA,yBACjBiB,EAAOS,QAAQF,YAI3BhC,aAAeyB,EAAOU,gBAM3BpC,aAAagB,UAGZH,iCAEcG,oBACF,gCACUP,KAAKN,0CAnJpCkC,EAAA,CAJCC,EAAS,CACRC,UAAW,SACXC,KAAMC,uCAYRJ,EAAA,CAJCC,EAAS,CACRC,UAAW,WACXC,KAAME,wCAYRL,EAAA,CAJCC,EAAS,CACRC,UAAW,WACXC,KAAMG,wCAeRN,EAAA,CANCC,EAAS,CACRC,UAAW,WACXK,UAAW,CAACC,EAAOL,IACVK,EAAMC,MAAM,sCAuBvBT,EAAA,CAXCC,EAAS,CACRC,UAAW,cACXK,UAAW,CAACC,EAAOL,KACjBK,EAAQA,EAAME,mBAC8B,IAAjC3C,EAAsByC,GACxBzC,EAAsBC,MAEtBD,EAAsByC,mDAlExB/C,EAASuC,EAAA,CADrBW,EAAc,eACFlD,SCbAG,EAAS,IAAMY,kGANb,CACboC,MAAO,2BACPC,UAAW,aACXC,WAAY,CAACC,EAAWC"}