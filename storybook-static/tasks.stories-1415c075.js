import{e,f as t}from"./index-3a445c6b.js";import{h as s}from"./lit-html-c7682711.js";import{c as a,p as n,a as i,f as o,k as r,M as l,P as d,b as k,h as c,l as p}from"./Graph-3b72116e.js";import"./mgt-mock-provider-3678bf7a.js";import{r as T}from"./repeat-78423d92.js";const u=[a`:host([hidden]){display:none}:host{display:block;--default-font-family:"Segoe UI","Segoe UI Web (West European)","Segoe UI",-apple-system,BlinkMacSystemFont,Roboto,"Helvetica Neue",sans-serif;--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}.ms-Icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.ms-Icon--ChevronDown::before{content:"\\\E70D"}.ms-Icon--ChevronUp::before{content:"\\\E70E"}.ms-Icon--Contact::before{content:"\\\E77B"}.ms-Icon--AddFriend::before{content:"\\\E8FA"}.ms-Icon--OutlookLogoInverse::before{content:"\\\EB6D"}mgt-tasks,:host{font-family:var(--default-font-family, "Segoe UI");display:flex;flex-direction:column}mgt-tasks .TaskIcon,:host .TaskIcon{font-family:FabricMDL2Icons;text-align:center;justify-self:center;align-content:center;align-self:center;vertical-align:middle;user-select:none;-moz-user-select:none;-ms-user-select:none}mgt-tasks .Header,:host .Header{padding:var(--tasks-header-padding,0 10px 0 10px);margin:var(--tasks-header-margin,0 0 10px 0)}mgt-tasks .TaskIcon.Divider,:host .TaskIcon.Divider{vertical-align:initial;margin:0 12px;font-size:16px}mgt-tasks .Header .PlannerTitle,:host .Header .PlannerTitle{padding:var(--tasks-title-padding,0 0 0 0);display:flex;align-items:center;align-content:center}mgt-tasks select,:host select{font-family:var(--default-font-family, "Segoe UI");border:none;-moz-appearance:none;-webkit-appearance:none;cursor:pointer}mgt-tasks select::-ms-expand,:host select::-ms-expand{display:none}mgt-tasks .PlannerTitle select,:host .PlannerTitle select,mgt-tasks .Header .PlannerTitle .PlanTitle,:host .Header .PlannerTitle .PlanTitle{font-family:var(--default-font-family, "Segoe UI");font-size:var(--tasks-plan-title-font-size,1.1em);padding:var(--tasks-plan-title-padding,5px)}mgt-tasks .Header .AddBar,:host .Header .AddBar{display:flex}mgt-tasks .Header .AddBar .AddBarItem,:host .Header .AddBar .AddBarItem{flex:1 1 auto}mgt-tasks .Header .NewTaskDue,:host .Header .NewTaskDue{display:flex}mgt-tasks .Header .NewTaskDue input,:host .Header .NewTaskDue input{flex:1 1 auto}mgt-tasks .Header .TitleCont,:host .Header .TitleCont{flex:1 1 auto;height:var(--tasks-new-button-height,34px)}mgt-tasks .Header .NewTaskButton,:host .Header .NewTaskButton{flex:0 0 auto;display:inline-block;width:var(--task-new-button-width,90px);height:var(--tasks-new-button-height,32px);max-width:90px;min-width:90px;line-height:200%;text-align:center;align-content:center;align-self:center;vertical-align:middle;justify-self:flex-end;background:var(--tasks-new-button-background,#0078d4);border:var(--tasks-new-button-border,solid 1px transparent);color:var(--tasks-new-button-color,#fff);user-select:none;-moz-user-select:none;-ms-user-select:none;cursor:pointer}mgt-tasks .Header .NewTaskButton:hover,:host .Header .NewTaskButton:hover{background:var(--tasks-new-button-hover-background,#0091ff)}mgt-tasks .Header .NewTaskButton:active,:host .Header .NewTaskButton:active{background:var(--tasks-new-button-active-background,#00508d)}mgt-tasks .Task,:host .Task{margin:var(--task-margin,0 10px 10px 10px);padding:var(--task-padding,0 0 0 0);box-shadow:var(--task-box-shadow,0 2px 8px rgba(0,0,0,.092));background:var(--task-background,#fff);position:relative}mgt-tasks .Task .TaskContent,:host .Task .TaskContent{display:flex;flex-direction:row}mgt-tasks .Task .TaskContent .TaskDetailsContainer,:host .Task .TaskContent .TaskDetailsContainer{color:var(--task-detail-color,#767676);margin:20px 0 18px 0;display:flex;flex-direction:column;flex:1 1 auto}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskTitle,:host .Task .TaskContent .TaskDetailsContainer .TaskTitle{flex:1 0 auto;color:#333;max-width:370px;width:100%;font-size:20px;font-weight:300}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails{display:flex;margin:10px 0 0 0;font-size:12px;font-weight:400;align-items:center;flex-wrap:wrap}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails svg,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails svg{vertical-align:middle;margin-right:4px}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails span,mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails select,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails span,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails select{vertical-align:middle}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails .TaskDetail,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails .TaskDetail{margin:0 20px 0 0}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails .TaskIcon,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails .TaskIcon{color:#333;margin:var(--task-detail-icon-margin 0 8px 0 0)}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails mgt-people,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails mgt-people{color:var(--task-detail-color,#000);font-size:16px}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails mgt-person,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails mgt-person{display:inline-block}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails .Picker,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails .Picker{background-color:#fff;display:block;position:absolute;box-shadow:0 3px 7px rgba(0,0,0,.3);-webkit-background-clip:padding-box;-moz-background-clip:padding-box;background-clip:padding-box;width:450px;color:var(--task-detail-color,#000);z-index:1}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails .Picker mgt-people-picker,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails .Picker mgt-people-picker{--separator-margin:0px 10px 0px 10px}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails .Picker.Hidden,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails .Picker.Hidden{display:none}mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails input,mgt-tasks .Task .TaskContent .TaskDetailsContainer .TaskDetails select,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails input,:host .Task .TaskContent .TaskDetailsContainer .TaskDetails select{color:var(--task-detail-color,#767676);font-size:.9em}mgt-tasks .Task .TaskHeader,:host .Task .TaskHeader{display:flex;justify-content:center;color:var(--task-header-color,#333);margin:var(--task-header-margin,0 0 0 10px)}mgt-tasks .Task.ReadOnly .TaskCheckContainer,:host .Task.ReadOnly .TaskCheckContainer{cursor:default}mgt-tasks .Task.Complete,:host .Task.Complete{background:var(--task-complete-background,#f6f6f6);border-color:var(--task-complete-border,#e2e2e2)}mgt-tasks .Task.Complete .TaskHeader,:host .Task.Complete .TaskHeader{color:var(--task-complete-header-color,#959595)}mgt-tasks .Task.Complete .TaskDetails,:host .Task.Complete .TaskDetails{color:var(--task-complete-detail-color #b0b0b0)}mgt-tasks .Task.Complete .TaskDetails .TaskIcon,:host .Task.Complete .TaskDetails .TaskIcon{color:var(--task-compete-detail-icon-color,#959595)}mgt-tasks .Task.NewTask,:host .Task.NewTask{margin:var(--task-new-margin,var(--task-margin,0 10px 10px 10px));display:flex;flex-direction:row}mgt-tasks .Task.NewTask .SelfAssign,:host .Task.NewTask .SelfAssign{display:none}mgt-tasks .Task.NewTask .AssignTo,:host .Task.NewTask .AssignTo{border:0;background:0 0}mgt-tasks .Task.NewTask .FakeCheckBox,:host .Task.NewTask .FakeCheckBox{width:15px;height:15px;cursor:pointer;margin:0 5px 0 5px}mgt-tasks .Task.NewTask .FakeCheckBox::after,:host .Task.NewTask .FakeCheckBox::after{font-family:FabricMDL2Icons;content:'\uE739'}mgt-tasks .Task.NewTask .FakeCheckBox ~ :checked,:host .Task.NewTask .FakeCheckBox ~ :checked{font-family:FabricMDL2Icons;content:'\uE73A'}mgt-tasks .Task.NewTask .TaskContent,:host .Task.NewTask .TaskContent{flex:1 1 auto;align-content:center;vertical-align:middle;margin:0 0 0 12px}mgt-tasks .Task.NewTask .TaskContent .TaskDetailsContainer,:host .Task.NewTask .TaskContent .TaskDetailsContainer{margin:0}mgt-tasks .Task.NewTask .TaskContent .TaskDetailsContainer .TaskTitle,:host .Task.NewTask .TaskContent .TaskDetailsContainer .TaskTitle{max-width:none}mgt-tasks .Task.NewTask .TaskContent .TaskDetailsContainer .TaskTitle input,:host .Task.NewTask .TaskContent .TaskDetailsContainer .TaskTitle input{flex:1 0 auto;font-family:var(--default-font-family, "Segoe UI");margin:var(--task-new-input-margin,16px 0 0 0);padding:var(--task-new-input-padding,7px);font-size:var(--task-new-input-font-size,1em);border:var(--task-new-border,none);width:100%}mgt-tasks .Task.NewTask .TaskContent .TaskDetailsContainer .TaskTitle input:active,:host .Task.NewTask .TaskContent .TaskDetailsContainer .TaskTitle input:active{border:var(--task-new-input-active-border,none)}mgt-tasks .Task.NewTask .TaskContent .TaskDetailsContainer hr,:host .Task.NewTask .TaskContent .TaskDetailsContainer hr{border:var(--task-new-line-border,solid 1px #d8d8d8);margin:0}mgt-tasks .Task.NewTask .TaskContent .TaskDetailsContainer .TaskDetails,:host .Task.NewTask .TaskContent .TaskDetailsContainer .TaskDetails{flex:1 0 auto;margin:14px 0 14px 4px}mgt-tasks .Task.NewTask .TaskContent .TaskDetailsContainer .TaskDetails .TaskPeople label,:host .Task.NewTask .TaskContent .TaskDetailsContainer .TaskDetails .TaskPeople label{display:flex;align-content:center;align-items:center}mgt-tasks .Task.NewTask .TaskContent .TaskDetailsContainer .TaskDetails select,mgt-tasks .Task.NewTask .TaskContent .TaskDetailsContainer .TaskDetails input,:host .Task.NewTask .TaskContent .TaskDetailsContainer .TaskDetails select,:host .Task.NewTask .TaskContent .TaskDetailsContainer .TaskDetails input{font-family:var(--default-font-family, "Segoe UI");border:var(--task-new-select-border,none);padding:0 10px}mgt-tasks .Task.NewTask .TaskAddButtonContainer,:host .Task.NewTask .TaskAddButtonContainer{flex:0 0 auto;display:flex;align-content:center;align-items:center}mgt-tasks .Task.NewTask .TaskAddButtonContainer .TaskAdd,mgt-tasks .Task.NewTask .TaskAddButtonContainer .TaskCancel,:host .Task.NewTask .TaskAddButtonContainer .TaskAdd,:host .Task.NewTask .TaskAddButtonContainer .TaskCancel{height:100%;max-width:50px;min-width:50px;flex:1 1 auto;justify-content:center;align-items:center;display:flex;cursor:pointer;color:#fff}mgt-tasks .Task.NewTask .TaskAddButtonContainer .TaskAdd,:host .Task.NewTask .TaskAddButtonContainer .TaskAdd{background:var(--task-new-add-button-background,#0078d4)}mgt-tasks .Task.NewTask .TaskAddButtonContainer .TaskCancel,:host .Task.NewTask .TaskAddButtonContainer .TaskCancel{font-family:var(--default-font-family, "Segoe UI");color:var(--task-new-cancel-button-color,gray);margin:0 20px 0 32px}mgt-tasks .Task.NewTask .TaskAddButtonContainer.Disabled .TaskAdd,:host .Task.NewTask .TaskAddButtonContainer.Disabled .TaskAdd{background:var(--task-new-add-button-disabled-background,#eaeaea);cursor:default}mgt-tasks .Task .TaskCheckContainer,:host .Task .TaskCheckContainer{font-family:FabricMDL2Icons;display:inline-block;width:24px;height:24px;text-align:center;border-radius:50%;flex:0 0 auto;color:#fff;cursor:pointer;display:flex;align-items:center;align-content:center;justify-items:center;justify-content:center;margin:20px 10px 20px 20px;user-select:none;-moz-user-select:none;-ms-user-select:none}mgt-tasks .Task .TaskCheckContainer.Complete .TaskCheck,:host .Task .TaskCheckContainer.Complete .TaskCheck{background:#00b294;border-color:#00b294;display:flex;align-items:center;align-content:center;justify-items:center;justify-content:center}mgt-tasks .Task .TaskCheck,:host .Task .TaskCheck{font-family:FabricMDL2Icons;display:inline-block;width:22px;height:22px;text-align:center;border-radius:50%;border:solid 1px #666;flex:0 0 auto;color:#fff;display:flex;align-items:center;align-content:center;justify-items:center;justify-content:center;user-select:none;-moz-user-select:none;-ms-user-select:none}mgt-tasks .Task .TaskCheck.Loading,:host .Task .TaskCheck.Loading{color:#000;animation:rotateIcon 2s infinite linear}mgt-tasks .Task.LoadingTask .TaskCheckContainer,:host .Task.LoadingTask .TaskCheckContainer{cursor:default}mgt-tasks .Task.LoadingTask .TaskCheck,:host .Task.LoadingTask .TaskCheck{background:#f2f2f2;border-color:#f2f2f2;cursor:default}mgt-tasks .Task.LoadingTask .TaskHeader,:host .Task.LoadingTask .TaskHeader{justify-content:flex-start;justify-items:flex-start}mgt-tasks .Task.LoadingTask .TaskDetailIcon,:host .Task.LoadingTask .TaskDetailIcon{width:16px;height:16px;margin:5px;background:#f2f2f2}mgt-tasks .Task.LoadingTask .TaskTitle,:host .Task.LoadingTask .TaskTitle{background:#f2f2f2;height:20px}mgt-tasks .Task.LoadingTask .TaskDetail,:host .Task.LoadingTask .TaskDetail{margin-right:8px;display:flex;flex-direction:row;align-items:center}mgt-tasks .Task.LoadingTask .TaskDetailName,:host .Task.LoadingTask .TaskDetailName{width:81px;height:10px;background:#f2f2f2}mgt-tasks .Task .TaskOptions,:host .Task .TaskOptions{cursor:pointer;user-select:none;-moz-user-select:none;-ms-user-select:none;position:absolute;top:0;right:0}mgt-tasks .LoadingHeader,:host .LoadingHeader{max-width:90px;width:100%;height:20px;background:#f2f2f2}@keyframes rotateIcon{from{transform:rotate(0)}to{transform:rotate(360deg)}}`];var h=function(e,t,s,a){return new(s||(s=Promise))(function(n,i){function o(e){try{l(a.next(e))}catch(e){i(e)}}function r(e){try{l(a.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof s?t:new s(function(e){e(t)})).then(o,r)}l((a=a.apply(e,t||[])).next())})};class g{constructor(e){this.graph=e}}class m extends g{getTaskGroups(){return h(this,void 0,void 0,function*(){return(yield this.graph.planner_getAllMyPlans()).map(e=>({id:e.id,title:e.title}))})}getTaskGroupsForGroup(e){return h(this,void 0,void 0,function*(){return(yield this.graph.getPlansForGroup(e)).map(e=>({id:e.id,title:e.title}))})}getTaskGroup(e){return h(this,void 0,void 0,function*(){const t=yield this.graph.planner_getSinglePlan(e);return{id:t.id,title:t.title,_raw:t}})}getTaskFoldersForTaskGroup(e){return h(this,void 0,void 0,function*(){return(yield this.graph.planner_getBucketsForPlan(e)).map(e=>({_raw:e,id:e.id,name:e.name,parentId:e.planId}))})}getTasksForTaskFolder(e){return h(this,void 0,void 0,function*(){return(yield this.graph.planner_getTasksForBucket(e)).map(e=>({_raw:e,assignments:e.assignments,completed:100===e.percentComplete,dueDate:e.dueDateTime&&new Date(e.dueDateTime),eTag:e["@odata.etag"],id:e.id,immediateParentId:e.bucketId,name:e.title,topParentId:e.planId}))})}setTaskComplete(e,t){return h(this,void 0,void 0,function*(){return yield this.graph.planner_setTaskComplete(e,t)})}setTaskIncomplete(e,t){return h(this,void 0,void 0,function*(){return yield this.graph.planner_setTaskIncomplete(e,t)})}addTask(e){return h(this,void 0,void 0,function*(){return yield this.graph.planner_addTask({assignments:e.assignments,bucketId:e.immediateParentId,dueDateTime:e.dueDate&&e.dueDate.toISOString(),planId:e.topParentId,title:e.name})})}assignPeopleToTask(e,t,s){return h(this,void 0,void 0,function*(){return yield this.graph.planner_assignPeopleToTask(e,t,s)})}removeTask(e,t){return h(this,void 0,void 0,function*(){return yield this.graph.planner_removeTask(e,t)})}isAssignedToMe(e,t){return Object.keys(e.assignments).includes(t)}}class f extends g{getTaskGroups(){return h(this,void 0,void 0,function*(){return(yield this.graph.todo_getAllMyGroups()).map(e=>({_raw:e,id:e.id,secondaryId:e.groupKey,title:e.name}))})}getTaskGroup(e){return h(this,void 0,void 0,function*(){const t=yield this.graph.todo_getSingleGroup(e);return{id:t.id,secondaryId:t.groupKey,title:t.name,_raw:t}})}getTaskFoldersForTaskGroup(e){return h(this,void 0,void 0,function*(){return(yield this.graph.todo_getFoldersForGroup(e)).map(t=>({_raw:t,id:t.id,name:t.name,parentId:e}))})}getTasksForTaskFolder(e,t){return h(this,void 0,void 0,function*(){return(yield this.graph.todo_getAllTasksForFolder(e)).map(s=>({_raw:s,assignments:{},completed:!!s.completedDateTime,dueDate:s.dueDateTime&&new Date(s.dueDateTime.dateTime+"Z"),eTag:s["@odata.etag"],id:s.id,immediateParentId:e,name:s.subject,topParentId:t}))})}setTaskComplete(e,t){return h(this,void 0,void 0,function*(){return yield this.graph.todo_setTaskComplete(e,t)})}assignPeopleToTask(e,t,s){return h(this,void 0,void 0,function*(){return yield this.graph.planner_assignPeopleToTask(e,t,s)})}setTaskIncomplete(e,t){return h(this,void 0,void 0,function*(){return yield this.graph.todo_setTaskIncomplete(e,t)})}addTask(e){return h(this,void 0,void 0,function*(){const t={parentFolderId:e.immediateParentId,subject:e.name};return e.dueDate&&(t.dueDateTime={dateTime:e.dueDate.toISOString(),timeZone:"UTC"}),yield this.graph.todo_addTask(t)})}removeTask(e,t){return h(this,void 0,void 0,function*(){return yield this.graph.todo_removeTask(e,t)})}isAssignedToMe(e,t){return!0}getTaskGroupsForGroup(e){return h(this,void 0,void 0,function*(){})}}const v=[a`:host,mgt-arrow-options{position:relative;font-family:'Segoe UI';margin:0 0 12px 0}:host .ArrowIcon,mgt-arrow-options .ArrowIcon{font-family:FabricMDL2Icons;margin:0 0 0 20px;user-select:none;-moz-user-select:none;-ms-user-select:none}:host .Header,mgt-arrow-options .Header{cursor:pointer}:host .Header:hover,mgt-arrow-options .Header:hover{color:var(--theme-primary-color);background-color:var(--background-color--hover)}:host .Menu,mgt-arrow-options .Menu{position:absolute;left:0;box-shadow:rgba(0,0,0,.08) 0 0 40px 5px;background:#fff;z-index:1;display:none;color:#000;white-space:nowrap}:host .Menu.Open,mgt-arrow-options .Menu.Open{display:block}:host .MenuOption,mgt-arrow-options .MenuOption{padding:20px;cursor:pointer;user-select:none;-moz-user-select:none;-ms-user-select:none;display:flex;align-items:center;justify-content:stretch;justify-items:stretch}:host .MenuOption:first,mgt-arrow-options .MenuOption:first{padding:12px 20px 20px 20px}:host .MenuOption:hover,mgt-arrow-options .MenuOption:hover{background:silver}:host .MenuOption:active,mgt-arrow-options .MenuOption:active{background:#d8d8d8}:host .MenuOptionCheck,mgt-arrow-options .MenuOptionCheck{font-family:FabricMDL2Icons;color:transparent;margin-right:10px}:host .MenuOptionCheck.CurrentValue,mgt-arrow-options .MenuOptionCheck.CurrentValue{color:#0078d4}`];var C=function(e,t,s,a){var n,i=arguments.length,o=i<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,s):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,s,a);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(o=(i<3?n(o):i>3?n(t,s,o):n(t,s))||o);return i>3&&o&&Object.defineProperty(t,s,o),o};let _=class extends o{constructor(){super(),this.open=!1,this.value="",this.options={},this._clickHandler=(e=>this.open=!1)}static get styles(){return v}connectedCallback(){super.connectedCallback(),window.addEventListener("click",this._clickHandler)}disconnectedCallback(){window.removeEventListener("click",this._clickHandler),super.disconnectedCallback()}onHeaderClick(e){Object.keys(this.options).length>1&&(e.preventDefault(),e.stopPropagation(),this.open=!this.open)}render(){return s` <span class="Header" @click="${e=>this.onHeaderClick(e)}"> <span class="CurrentValue">${this.value}</span> </span> <div class="${r({Menu:!0,Open:this.open,Closed:!this.open})}"> ${this.getMenuOptions()} </div> `}getMenuOptions(){const e=Object.keys(this.options),t=this.options;return e.map(e=>s` <div class="MenuOption" @click="${s=>{this.open=!1,t[e](s)}}"> <span class="${r({MenuOptionCheck:!0,CurrentValue:this.value===e})}"> \uE73E </span> <span class="MenuOptionName">${e}</span> </div> `)}};C([n({type:Boolean})],_.prototype,"open",void 0),C([n({type:String})],_.prototype,"value",void 0),C([n({type:Object})],_.prototype,"options",void 0),_=C([i("mgt-arrow-options")],_);const w=[a`:host([hidden]){display:none}:host{display:block;--default-font-family:"Segoe UI","Segoe UI Web (West European)","Segoe UI",-apple-system,BlinkMacSystemFont,Roboto,"Helvetica Neue",sans-serif;--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}.ms-Icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.ms-Icon--ChevronDown::before{content:"\\\E70D"}.ms-Icon--ChevronUp::before{content:"\\\E70E"}.ms-Icon--Contact::before{content:"\\\E77B"}.ms-Icon--AddFriend::before{content:"\\\E8FA"}.ms-Icon--OutlookLogoInverse::before{content:"\\\EB6D"}:host,mgt-dot-options{font-family:'Segoe UI'}:host .DotIcon,mgt-dot-options .DotIcon{display:inline-block;font-family:FabricMDL2Icons;min-width:40px;min-height:30px;text-align:center;line-height:30px}:host .Menu,mgt-dot-options .Menu{position:absolute;box-shadow:rgba(0,0,0,.08) 0 0 40px 5px;background:#fff;z-index:1;display:none;color:#000;white-space:nowrap;transform:translateX(-50px)}:host .DotMenu.Open .Menu,mgt-dot-options .DotMenu.Open .Menu{display:block}:host .DotMenu .DotItem,mgt-dot-options .DotMenu .DotItem{direction:ltr;text-align:left;padding:10px 10px 8px 10px}:host .DotMenu .DotItem:hover,mgt-dot-options .DotMenu .DotItem:hover{background:silver}:host .DotMenu .DotItem:active,mgt-dot-options .DotMenu .DotItem:active{background:#d8d8d8}:host .DotMenu .DotItemName,mgt-dot-options .DotMenu .DotItemName{direction:rtl}`];var D=function(e,t,s,a){var n,i=arguments.length,o=i<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,s):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,s,a);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(o=(i<3?n(o):i>3?n(t,s,o):n(t,s))||o);return i>3&&o&&Object.defineProperty(t,s,o),o};let y=class extends o{constructor(){super(),this.open=!1,this.options=null,this._clickHandler=null,this._clickHandler=(e=>this.open=!1)}static get styles(){return w}connectedCallback(){super.connectedCallback(),window.addEventListener("click",this._clickHandler)}disconnectedCallback(){window.removeEventListener("click",this._clickHandler),super.disconnectedCallback()}render(){return s` <div class="${r({DotMenu:!0,Open:this.open})}" @click="${e=>this.onDotClick(e)}"> <span class="DotIcon">\uE712</span> <div class="Menu"> ${Object.keys(this.options).map(e=>this.getMenuOption(e,this.options[e]))} </div> </div> `}getMenuOption(e,t){return s` <div class="DotItem" @click="${e=>{e.preventDefault(),e.stopPropagation(),t(e),this.open=!1}}"> <span class="DotItemName"> ${e} </span> </div> `}onDotClick(e){e.preventDefault(),e.stopPropagation(),this.open=!this.open}};D([n({type:Boolean})],y.prototype,"open",void 0),D([n({type:Object})],y.prototype,"options",void 0),y=D([i("mgt-dot-options")],y);var I,b=function(e,t,s,a){var n,i=arguments.length,o=i<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,s):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,s,a);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(o=(i<3?n(o):i>3?n(t,s,o):n(t,s))||o);return i>3&&o&&Object.defineProperty(t,s,o),o},x=function(e,t,s,a){return new(s||(s=Promise))(function(n,i){function o(e){try{l(a.next(e))}catch(e){i(e)}}function r(e){try{l(a.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof s?t:new s(function(e){e(t)})).then(o,r)}l((a=a.apply(e,t||[])).next())})};!function(e){e[e.planner=0]="planner",e[e.todo=1]="todo"}(I||(I={}));const P={BASE_SELF_ASSIGNED:"All Tasks",BUCKETS_SELF_ASSIGNED:"All Tasks",BUCKET_NOT_FOUND:"Folder not found",PLANS_SELF_ASSIGNED:"All groups",PLAN_NOT_FOUND:"Group not found"},S={BASE_SELF_ASSIGNED:"Assigned to Me",BUCKETS_SELF_ASSIGNED:"All Tasks",BUCKET_NOT_FOUND:"Bucket not found",PLANS_SELF_ASSIGNED:"All Plans",PLAN_NOT_FOUND:"Plan not found"},H={"@odata.type":"microsoft.graph.plannerAssignment",orderHint:"string !"};let N=class extends l{constructor(){super(),this.readOnly=!1,this.dataSource=I.planner,this.targetId=null,this.targetBucketId=null,this.initialId=null,this.initialBucketId=null,this.hideHeader=!1,this.groupId=null,this._isNewTaskVisible=!1,this._newTaskBeingAdded=!1,this._newTaskName="",this._newTaskDueDate=null,this._newTaskGroupId="",this._newTaskFolderId="",this._groups=[],this._folders=[],this._tasks=[],this._hiddenTasks=[],this._loadingTasks=[],this._inTaskLoad=!1,this._hasDoneInitialLoad=!1,this._todoDefaultSet=!1,this.isPeoplePickerVisible=!1,this._me=null,this.providerUpdateCallback=(()=>this.loadTasks()),this.handleWindowClick=(()=>this.hidePeoplePicker())}get res(){switch(this.dataSource){case I.todo:return P;case I.planner:default:return S}}static get styles(){return u}get isNewTaskVisible(){return this._isNewTaskVisible}set isNewTaskVisible(e){this._isNewTaskVisible=e,e||(this._newTaskDueDate=null,this._newTaskName="",this._newTaskGroupId="")}connectedCallback(){super.connectedCallback(),d.onProviderUpdated(this.providerUpdateCallback),window.addEventListener("click",this.handleWindowClick)}disconnectedCallback(){d.removeProviderUpdatedListener(this.providerUpdateCallback),window.removeEventListener("click",this.handleWindowClick),super.disconnectedCallback()}attributeChangedCallback(e,t,s){super.attributeChangedCallback(e,t,s),"data-source"===e&&(this.dataSource===I.planner?(this._currentGroup=this.initialId,this._currentFolder=this.initialBucketId):this.dataSource===I.todo&&(this._currentGroup=null,this._currentFolder=this.initialId),this._newTaskFolderId="",this._newTaskGroupId="",this._newTaskDueDate=null,this._newTaskName="",this._newTaskBeingAdded=!1,this._tasks=[],this._folders=[],this._groups=[],this._hasDoneInitialLoad=!1,this._inTaskLoad=!1,this._todoDefaultSet=!1,this.loadTasks())}firstUpdated(){this.initialId&&!this._currentGroup&&(this.dataSource===I.planner?this._currentGroup=this.initialId:this.dataSource===I.todo&&(this._currentFolder=this.initialId)),this.dataSource===I.planner&&this.initialBucketId&&!this._currentFolder&&(this._currentFolder=this.initialBucketId),this.loadTasks()}render(){const e=this._tasks.filter(e=>this.isTaskInSelectedGroupFilter(e)).filter(e=>this.isTaskInSelectedFolderFilter(e)).filter(e=>!this._hiddenTasks.includes(e.id)),t=this._inTaskLoad&&!this._hasDoneInitialLoad?this.renderLoadingTask():null;let a;return this.hideHeader||(a=s` <div class="Header"> <span class="PlannerTitle"> ${this.renderPlanOptions()} </span> </div> `),s` ${a} <div class="Tasks"> ${this._isNewTaskVisible?this.renderNewTask():null} ${t} ${T(e,e=>e.id,e=>this.renderTask(e))} </div> `}loadTasks(){return x(this,void 0,void 0,function*(){const e=this.getTaskSource();if(!e)return;const t=d.globalProvider;if(!t||t.state!==k.SignedIn)return;let s;this._inTaskLoad=!0,this._me||(s=t.graph.getMe()),this.groupId&&this.dataSource===I.planner?yield this._loadTasksForGroup(e):this.targetId?this.dataSource===I.todo?yield this._loadTargetTodoTasks(e):yield this._loadTargetPlannerTasks(e):yield this._loadAllTasks(e),s&&(this._me=yield s),this._inTaskLoad=!1,this._hasDoneInitialLoad=!0})}_loadTargetTodoTasks(e){return x(this,void 0,void 0,function*(){const t=yield e.getTaskGroups(),s=(yield Promise.all(t.map(t=>e.getTaskFoldersForTaskGroup(t.id)))).reduce((e,t)=>[...e,...t],[]),a=(yield Promise.all(s.map(t=>e.getTasksForTaskFolder(t.id,t.parentId)))).reduce((e,t)=>[...e,...t],[]);this._tasks=a,this._folders=s,this._groups=t,this._currentGroup=null})}_loadTargetPlannerTasks(e){return x(this,void 0,void 0,function*(){const t=yield e.getTaskGroup(this.targetId);let s=yield e.getTaskFoldersForTaskGroup(t.id);this.targetBucketId&&(s=s.filter(e=>e.id===this.targetBucketId));const a=(yield Promise.all(s.map(t=>e.getTasksForTaskFolder(t.id,t.parentId)))).reduce((e,t)=>[...e,...t],[]);this._tasks=a,this._folders=s,this._groups=[t]})}_loadAllTasks(e){return x(this,void 0,void 0,function*(){const t=yield e.getTaskGroups(),s=(yield Promise.all(t.map(t=>e.getTaskFoldersForTaskGroup(t.id)))).reduce((e,t)=>[...e,...t],[]);if(!this.initialId&&this.dataSource===I.todo&&!this._todoDefaultSet){this._todoDefaultSet=!0;const e=s.find(e=>e._raw.isDefaultFolder);e&&(this._currentFolder=e.id)}const a=(yield Promise.all(s.map(t=>e.getTasksForTaskFolder(t.id,t.parentId)))).reduce((e,t)=>[...e,...t],[]);this._tasks=a,this._folders=s,this._groups=t})}_loadTasksForGroup(e){return x(this,void 0,void 0,function*(){const t=yield e.getTaskGroupsForGroup(this.groupId),s=(yield Promise.all(t.map(t=>e.getTaskFoldersForTaskGroup(t.id)))).reduce((e,t)=>[...e,...t],[]),a=(yield Promise.all(s.map(t=>e.getTasksForTaskFolder(t.id,t.parentId)))).reduce((e,t)=>[...e,...t],[]);this._tasks=a,this._folders=s,this._groups=t})}addTask(e,t,s,a){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};return x(this,void 0,void 0,function*(){const i=this.getTaskSource();if(!i)return;const o={assignments:n,dueDate:t,immediateParentId:a,name:e,topParentId:s};this._newTaskBeingAdded=!0,yield i.addTask(o),yield this.loadTasks(),this._newTaskBeingAdded=!1,this.isNewTaskVisible=!1})}completeTask(e){return x(this,void 0,void 0,function*(){const t=this.getTaskSource();t&&(this._loadingTasks=[...this._loadingTasks,e.id],yield t.setTaskComplete(e.id,e.eTag),yield this.loadTasks(),this._loadingTasks=this._loadingTasks.filter(t=>t!==e.id))})}uncompleteTask(e){return x(this,void 0,void 0,function*(){const t=this.getTaskSource();t&&(this._loadingTasks=[...this._loadingTasks,e.id],yield t.setTaskIncomplete(e.id,e.eTag),yield this.loadTasks(),this._loadingTasks=this._loadingTasks.filter(t=>t!==e.id))})}removeTask(e){return x(this,void 0,void 0,function*(){const t=this.getTaskSource();t&&(this._hiddenTasks=[...this._hiddenTasks,e.id],yield t.removeTask(e.id,e.eTag),yield this.loadTasks(),this._hiddenTasks=this._hiddenTasks.filter(t=>t!==e.id))})}assignPeople(e,t){return x(this,void 0,void 0,function*(){const s=this.getTaskSource();if(!s)return;let a=[];e&&e.assignments&&(a=Object.keys(e.assignments).sort());const n=t.map(e=>e.id);if(n.length===a.length&&n.sort().every((e,t)=>e===a[t]))return;const i={};if(0===t.length)for(let e=0;e<a.length;e++)i[a[e]]=null;if(t){for(let e=0;e<a.length;e++)for(let s=0;s<t.length;s++){if(a[e]!==t[s].id){i[a[e]]=null;break}i[a[e]]=H}for(let e=0;e<t.length;e++)i[t[e].id]=H}e&&(this._loadingTasks=[...this._loadingTasks,e.id],yield s.assignPeopleToTask(e.id,i,e.eTag),yield this.loadTasks(),this._loadingTasks=this._loadingTasks.filter(t=>t!==e.id))})}onAddTaskClick(e){const t=this.getPeoplePicker(null),s={};if(t)for(const e of t.selectedPeople)t.selectedPeople.length&&(s[e.id]=H);!this._newTaskBeingAdded&&this._newTaskName&&(this._currentGroup||this._newTaskGroupId)&&this.addTask(this._newTaskName,this._newTaskDueDate,this._currentGroup?this._currentGroup:this._newTaskGroupId,this._currentFolder?this._currentFolder:this._newTaskFolderId,s)}renderPlanOptions(){const e=d.globalProvider;if(!e||e.state!==k.SignedIn)return null;if(this._inTaskLoad&&!this._hasDoneInitialLoad)return s` <span class="LoadingHeader"></span> `;const t=this.readOnly||this._isNewTaskVisible?null:s` <span class="AddBarItem NewTaskButton" @click="${()=>{this.isNewTaskVisible=!this.isNewTaskVisible}}"> <span class="TaskIcon">\uE710</span> <span>Add</span> </span> `;if(this.dataSource===I.planner){const e=this._groups.find(e=>e.id===this._currentGroup)||{title:this.res.BASE_SELF_ASSIGNED},a={[this.res.BASE_SELF_ASSIGNED]:e=>{this._currentGroup=null,this._currentFolder=null}};for(const e of this._groups)a[e.title]=(t=>{this._currentGroup=e.id,this._currentFolder=null});const n=s` <mgt-arrow-options .options="${a}" .value="${e.title}"></mgt-arrow-options> `,i=this._currentGroup?s` <span class="TaskIcon Divider">/</span> `:null,o=this._folders.find(e=>e.id===this._currentFolder)||{name:this.res.BUCKETS_SELF_ASSIGNED},r={[this.res.BUCKETS_SELF_ASSIGNED]:e=>{this._currentFolder=null}};for(const e of this._folders.filter(e=>e.parentId===this._currentGroup))r[e.name]=(t=>{this._currentFolder=e.id});const l=this.targetBucketId?s` <span class="PlanTitle"> ${this._folders[0]&&this._folders[0].name} </span> `:s` <mgt-arrow-options .options="${r}" .value="${o.name}"></mgt-arrow-options> `;return s` <span class="TitleCont"> ${n} ${i} ${this._currentGroup?l:null} </span> ${t} `}{const e=this._folders.find(e=>e.id===this.targetId)||{name:this.res.BUCKETS_SELF_ASSIGNED},a=this._folders.find(e=>e.id===this._currentFolder)||{name:this.res.BUCKETS_SELF_ASSIGNED},n={};for(const e of this._folders)n[e.name]=(()=>{this._currentFolder=e.id});n[this.res.BUCKETS_SELF_ASSIGNED]=(e=>{this._currentFolder=null});const i=this.targetId?s` <span class="PlanTitle"> ${e.name} </span> `:s` <mgt-arrow-options .value="${a.name}" .options="${n}"></mgt-arrow-options> `;return s` <span class="TitleCont"> ${i} </span> ${t} `}}renderNewTask(){const e=s` <input type="text" placeholder="Task..." .value="${this._newTaskName}" label="new-taskName-input" aria-label="new-taskName-input" role="input" @input="${e=>{this._newTaskName=e.target.value}}"> `,t=this._groups;t.length>0&&!this._newTaskGroupId&&(this._newTaskGroupId=t[0].id);const a=this.dataSource===I.todo?null:this._currentGroup?s` <span class="TaskDetail TaskAssignee"> ${this.renderPlannerIcon()} <span>${this.getPlanTitle(this._currentGroup)}</span> </span> `:s` <span class="TaskDetail TaskAssignee"> ${this.renderPlannerIcon()} <select .value="${this._newTaskGroupId}" @change="${e=>{this._newTaskGroupId=e.target.value}}"> ${this._groups.map(e=>s` <option value="${e.id}">${e.title}</option> `)} </select> </span> `,n=this._folders.filter(e=>this._currentGroup&&e.parentId===this._currentGroup||!this._currentGroup&&e.parentId===this._newTaskGroupId);n.length>0&&!this._newTaskFolderId&&(this._newTaskFolderId=n[0].id);const i=this._currentFolder?s` <span class="TaskDetail TaskBucket"> ${this.renderBucketIcon()} <span>${this.getFolderName(this._currentFolder)}</span> </span> `:s` <span class="TaskDetail TaskBucket"> ${this.renderBucketIcon()} <select .value="${this._newTaskFolderId}" @change="${e=>{this._newTaskFolderId=e.target.value}}"> ${n.map(e=>s` <option value="${e.id}">${e.name}</option> `)} </select> </span> `,o=s` <span class="TaskDetail TaskDue"> ${this.renderCalendarIcon()} <input type="date" label="new-taskDate-input" aria-label="new-taskDate-input" role="input" .value="${this.dateToInputValue(this._newTaskDueDate)}" @change="${e=>{const t=e.target.value;this._newTaskDueDate=t?new Date(t+"T17:00"):null}}"> </span> `,l=s` <mgt-people class="people-newTask" .userIds="${[]}" .personCardInteraction="${this.isPeoplePickerVisible?c.none:c.hover}"> <template data-type="no-people"> <i class="login-icon ms-Icon ms-Icon--Contact"></i> </template> </mgt-people> `,d=this.dataSource===I.todo?null:s` <span class="TaskDetail TaskPeople"> <span @click="${e=>{e.stopPropagation(),this.showPeoplePicker(null)}}"> ${l} <div class="${r({Picker:!0,Hidden:!this.isPeoplePickerVisible||null!==this._currentTask})}"> <mgt-people-picker class="picker-newTask" @click="${e=>e.stopPropagation()}"></mgt-people-picker> </div> </span> </span> `,k=this._newTaskBeingAdded?s` <div class="TaskAddButtonContainer"></div> `:s` <div class="TaskAddButtonContainer ${""===this._newTaskName?"Disabled":""}"> <div class="TaskIcon TaskCancel" @click="${()=>this.isNewTaskVisible=!1}"> <span>Cancel</span> </div> <div class="TaskIcon TaskAdd" @click="${this.onAddTaskClick}"> <span>\uE710</span> </div> </div> `;return s` <div class="Task NewTask Incomplete"> <div class="TaskContent"> <div class="TaskDetailsContainer"> <div class="TaskTitle"> ${e} </div> <hr> <div class="TaskDetails"> ${a} ${i} ${d} ${o} </div> </div> </div> ${k} </div> `}showPeoplePicker(e){if(this.isPeoplePickerVisible){if(e===this._currentTask)return void this.hidePeoplePicker()}this._currentTask=e,this.isPeoplePickerVisible=!0;const t=this.getPeoplePicker(e),s=this.getMgtPeople(e);t&&s&&(t.selectedPeople=s.people,setTimeout(()=>{t.focus()},50))}hidePeoplePicker(){const e=this.getPeoplePicker(this._currentTask),t=this.getMgtPeople(this._currentTask);e&&(t.people=e.selectedPeople,this.assignPeople(this._currentTask,e.selectedPeople)),this.isPeoplePickerVisible=!1,this._currentTask=null}getPeoplePicker(e){const t=e?e.id:"newTask";return this.renderRoot.querySelector(`.picker-${t}`)}getMgtPeople(e){const t=e?e.id:"newTask";return this.renderRoot.querySelector(`.people-${t}`)}renderTask(e){const{name:t="Task",completed:a=!1,dueDate:n,assignments:i}=e,o=this._loadingTasks.includes(e.id),l=o?s` \uF16A `:a?s` \uE73E `:null,d=s` <span class="${r({Complete:!o&&a,Loading:o,TaskCheck:!0,TaskIcon:!0})}">${l}</span> `,k=this._currentGroup?null:this.getPlanTitle(e.topParentId),T=this._currentFolder?null:this.getFolderName(e.immediateParentId),u={task:Object.assign(Object.assign({},e),{groupTitle:k,folderTitle:T})},h=this.renderTemplate("task",u,e.id);if(h)return h;let g=this.renderTemplate("task-details",u,`task-details-${e.id}`);if(!g){const a=this.dataSource===I.todo||this._currentGroup?null:s` <span class="TaskDetail TaskAssignee"> ${this.renderPlannerIcon()} <span>${this.getPlanTitle(e.topParentId)}</span> </span> `,o=this._currentFolder?null:s` <span class="TaskDetail TaskBucket"> ${this.renderBucketIcon()} <span>${this.getFolderName(e.immediateParentId)}</span> </span> `,l=n?s` <span class="TaskDetail TaskDue"> ${this.renderCalendarIcon()} <span>${p(n)}</span> </span> `:null;let d=null,k=null;const T=Object.keys(i).map(e=>e),u=s` <template data-type="no-people"> <i class="login-icon ms-Icon ms-Icon--Contact"></i> </template> `;this.dataSource!==I.todo&&(k=s` <mgt-people class="people-${e.id}" .userIds="${T}" .personCardInteraction="${this.isPeoplePickerVisible?c.none:c.hover}">${u} </mgt-people> `,d=s` <span class="TaskDetail TaskBucket" @click="${t=>{this.showPeoplePicker(e),t.stopPropagation()}}"> ${k} <div class="${r({Picker:!0,Hidden:!this.showPeoplePicker||e!==this._currentTask})}"> <mgt-people-picker class="picker-${e.id}" @click="${e=>e.stopPropagation()}"></mgt-people-picker> </div> </span> `),g=s` <div class="TaskTitle"> ${t} </div> <div class="TaskDetails"> ${a} ${o} ${d} ${l} </div> `}const m=this.readOnly?null:s` <div class="TaskOptions"> <mgt-dot-options .options="${{"Delete Task":()=>this.removeTask(e)}}"></mgt-dot-options> </div> `;return s` <div class="${r({Complete:a,Incomplete:!a,ReadOnly:this.readOnly,Task:!0})}"> <div class="TaskContent" @click="${()=>{this.handleTaskClick(e)}}"> <span class="${r({Complete:a,Incomplete:!a,TaskCheckContainer:!0})}" @click="${t=>{this.readOnly||(e.completed?this.uncompleteTask(e):this.completeTask(e),t.stopPropagation(),t.preventDefault())}}"> ${d} </span> <div class="TaskDetailsContainer"> ${g} </div> </div> ${m} </div> `}handleTaskClick(e){e&&!this.isPeoplePickerVisible&&this.fireCustomEvent("taskClick",{task:e._raw})}renderLoadingTask(){return s` <div class="Task LoadingTask"> <div class="TaskContent"> <div class="TaskCheckContainer"> <div class="TaskCheck"></div> </div> <div class="TaskDetailsContainer"> <div class="TaskTitle"></div> <div class="TaskDetails"> <span class="TaskDetail"> <div class="TaskDetailIcon"></div> <div class="TaskDetailName"></div> </span> <span class="TaskDetail"> <div class="TaskDetailIcon"></div> <div class="TaskDetailName"></div> </span> <span class="TaskDetail"> <div class="TaskDetailIcon"></div> <div class="TaskDetailName"></div> </span> <span class="TaskDetail"> <div class="TaskDetailIcon"></div> <div class="TaskDetailName"></div> </span> </div> </div> </div> </div> `}renderPlannerIcon(){return s` <svg width="16" height="18" viewBox="0 0 16 18" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M7.223 1.156C6.98 1.26 6.769 1.404 6.586 1.586C6.403 1.768 6.261 1.98 6.157 2.223C6.052 2.465 6 2.724 6 3H2V17H14V3H10C10 2.724 9.948 2.465 9.844 2.223C9.74 1.98 9.596 1.768 9.414 1.586C9.231 1.404 9.02 1.26 8.777 1.156C8.535 1.053 8.276 1 8 1C7.723 1 7.465 1.053 7.223 1.156ZM5 4H7V3C7 2.86 7.026 2.729 7.078 2.609C7.13 2.49 7.202 2.385 7.293 2.293C7.384 2.202 7.49 2.131 7.609 2.079C7.73 2.026 7.859 2 8 2C8.14 2 8.271 2.026 8.39 2.079C8.511 2.131 8.616 2.202 8.707 2.293C8.798 2.385 8.87 2.49 8.922 2.609C8.974 2.729 9 2.86 9 3V4H11V5H5V4ZM12 6V4H13V16H3V4H4V6H12Z" fill="#3C3C3C"/> <path fill-rule="evenodd" clip-rule="evenodd" d="M7.35156 12.3517L5.49956 14.2037L4.14856 12.8517L4.85156 12.1487L5.49956 12.7967L6.64856 11.6487L7.35156 12.3517Z" fill="#3C3C3C"/> <path fill-rule="evenodd" clip-rule="evenodd" d="M7.35156 8.35168L5.49956 10.2037L4.14856 8.85168L4.85156 8.14868L5.49956 8.79668L6.64856 7.64868L7.35156 8.35168Z" fill="#3C3C3C"/> <path fill-rule="evenodd" clip-rule="evenodd" d="M8 14H12.001V13H8V14Z" fill="#3C3C3C"/> <path fill-rule="evenodd" clip-rule="evenodd" d="M8 10H12.001V9H8V10Z" fill="#3C3C3C"/> </svg> `}renderBucketIcon(){return s` <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M14 2H2V4H3H5H6H10H11H13H14V2ZM10 5H6V6H10V5ZM5 5H3V14H13V5H11V6C11 6.55228 10.5523 7 10 7H6C5.44772 7 5 6.55228 5 6V5ZM1 5H2V14V15H3H13H14V14V5H15V4V2V1H14H2H1V2V4V5Z" fill="#3C3C3C"/> </svg> `}renderCalendarIcon(){return s` <svg width="20" height="18" viewBox="0 0 20 18" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M12 7H11V8H12V7ZM9 13H8V14H9V13ZM6 7H5V8H6V7ZM9 7H8V8H9V7ZM12 9H11V10H12V9ZM15 9H14V10H15V9ZM6 9H5V10H6V9ZM9 9H8V10H9V9ZM12 11H11V12H12V11ZM15 11H14V12H15V11ZM6 11H5V12H6V11ZM9 11H8V12H9V11ZM12 13H11V14H12V13ZM15 13H14V14H15V13ZM2 2V16H18V2H15V1H14V2H6V1H5V2H2ZM17 3V5H3V3H5V4H6V3H14V4H15V3H17ZM3 15V6H17V15H3Z" fill="#3C3C3C"/> </svg> `}getTaskSource(){const e=d.globalProvider;return e&&e.state===k.SignedIn?this.dataSource===I.planner?new m(e.graph):this.dataSource===I.todo?new f(e.graph):null:null}getPlanTitle(e){return e?e===this.res.PLANS_SELF_ASSIGNED?this.res.PLANS_SELF_ASSIGNED:(this._groups.find(t=>t.id===e)||{title:this.res.PLAN_NOT_FOUND}).title:this.res.BASE_SELF_ASSIGNED}getFolderName(e){return e?(this._folders.find(t=>t.id===e)||{name:this.res.BUCKET_NOT_FOUND}).name:this.res.BUCKETS_SELF_ASSIGNED}isTaskInSelectedGroupFilter(e){return e.topParentId===this._currentGroup||!this._currentGroup&&this.getTaskSource().isAssignedToMe(e,this._me.id)}isTaskInSelectedFolderFilter(e){return e.immediateParentId===this._currentFolder||!this._currentFolder}dateToInputValue(e){return e?new Date(e.getTime()-6e4*e.getTimezoneOffset()).toISOString().split("T")[0]:null}};b([n({attribute:"read-only",type:Boolean})],N.prototype,"readOnly",void 0),b([n({attribute:"data-source",converter:(e,t)=>(e=e.toLowerCase(),I[e]||I.planner)})],N.prototype,"dataSource",void 0),b([n({attribute:"target-id",type:String})],N.prototype,"targetId",void 0),b([n({attribute:"target-bucket-id",type:String})],N.prototype,"targetBucketId",void 0),b([n({attribute:"initial-id",type:String})],N.prototype,"initialId",void 0),b([n({attribute:"initial-bucket-id",type:String})],N.prototype,"initialBucketId",void 0),b([n({attribute:"hide-header",type:Boolean})],N.prototype,"hideHeader",void 0),b([n({attribute:"group-id",type:String})],N.prototype,"groupId",void 0),b([n()],N.prototype,"_isNewTaskVisible",void 0),b([n()],N.prototype,"_newTaskBeingAdded",void 0),b([n()],N.prototype,"_newTaskName",void 0),b([n()],N.prototype,"_newTaskDueDate",void 0),b([n()],N.prototype,"_newTaskGroupId",void 0),b([n()],N.prototype,"_newTaskFolderId",void 0),b([n()],N.prototype,"_groups",void 0),b([n()],N.prototype,"_folders",void 0),b([n()],N.prototype,"_tasks",void 0),b([n()],N.prototype,"_hiddenTasks",void 0),b([n()],N.prototype,"_loadingTasks",void 0),b([n()],N.prototype,"_inTaskLoad",void 0),b([n()],N.prototype,"_hasDoneInitialLoad",void 0),b([n()],N.prototype,"_todoDefaultSet",void 0),b([n()],N.prototype,"_currentGroup",void 0),b([n()],N.prototype,"_currentFolder",void 0),b([n()],N.prototype,"_currentTask",void 0),b([n()],N.prototype,"isPeoplePickerVisible",void 0),N=b([i("mgt-tasks")],N);const F=()=>s` <mgt-mock-provider></mgt-mock-provider> <mgt-tasks></mgt-tasks> `;export default{title:"Mock Provider|mgt-tasks",component:"mgt-tasks",decorators:[e,t]};export{F as tasks};
//# sourceMappingURL=tasks.stories-1415c075.js.map
